.SUFFIXES : .x .o .c .s

SUBDIRS=wireless_tools.29 \
		busybox-1.22.1 \
		i2c-tools \
		demos/ebi \
		demos/wwdt \
		demos/uart \
		demos/thread \
		demos/alsa_audio \
		demos/irda \
		demos/wdt \
		demos/crypto \
		demos/etimer \
		demos/gpio \
		demos/lcm \
		demos/cap \
		demos/keypad \
		demos/CAN \
		demos/rs485 \
		demos/sc \
		demos/eth2uart \
		demos/spi \
		demos/2d \
		demos/rtc
        
BENCHMARK_SUBDIRS=benchmark/netperf-2.6.0
LIGHTTPD_SUBDIRS=lighttpd-1.4.39
TSLIB_DIRS=tslib-1.1
UUID_DIRS=libuuid-1.0.3
LZO_DIRS=lzo-2.09
MTD_DIRS=mtd-utils
YAFFS2_DIRS=yaffs2utils
PYTHON=Python-2.7.9
ETHTOOL=ethtool-4.6

MINIGUI_LIB_SUBDIRS=minigui/libminigui-gpl-3.0.12
MINIGUI_RES_SUBDIRS=minigui/minigui-res-be-3.0.12
MINIGUI_APP_SUBDIRS=minigui/mg-samples-3.0.12

SETUPPATH=$(PWD)/$(MTD_DIRS)/install

define make_subdir
	@for subdir in $(SUBDIRS) ; do \
		( cd $$subdir && make $1) || exit 1; \
	done;
	@for subdir in $(BENCHMARK_SUBDIRS) ; do \
		( cd $$subdir && echo "ac_cv_func_setpgrp_void=yes" > config.cache && ./configure --host=arm-linux --config-cache && make $1) || exit 1; \
	done;

	@for subdir in $(LIGHTTPD_SUBDIRS) ; do \
		( cd $$subdir && ./configure --host arm-linux --build pentium-pc-linux --without-zlib --without-bzip2 --without-pcre --target arm-linux && autoreconf --install --verbose --force && make) || exit 1; \
	done;

	@for subdir in $(TSLIB_DIRS) ; do \
		( cd $$subdir && ./configure --host=arm-linux --enable-static && make $1) || exit 1; \
	done;

	@for subdir in $(MTD_DIRS) ; do \
	( \
	cd $(LZO_DIRS) && ./configure --host=arm-linux --prefix=$(SETUPPATH) && make && make install && cd .. ;\
	cd $(UUID_DIRS)&& autoreconf --force --install && ./configure --host=arm-linux --prefix=$(SETUPPATH) && \
			 make && make install && cd .. ; \
	cd $(MTD_DIRS) && make LZOCPPFLAGS=-Iinstall/include LZOLDFLAGS=-Linstall/lib  \
			CROSS=arm-linux-  WITHOUT_XATTR=1 CFLAGS=-DWITHOUT_LZO \
	) \
	done;

	@for subdir in $(YAFFS2_DIRS) ; do \
	( cd $$subdir && make CROSS=arm-linux- ) \
	done;

	( cd $(ETHTOOL) && ./configure CC=arm-linux-gcc CTAGS=-mach=armv5te --host=arm-linux && make) || exit 1;

endef

define make_python
	@for subdir in $(PYTHON) ; do  \
        ( cd $$subdir && ./make_python.sh ) \
	done;
endef

define make_minigui   
    @for subdir in $(MINIGUI_LIB_SUBDIRS) ; do \
        cd $(MINIGUI_LIB_SUBDIRS) && ./configure --prefix=$(PWD)/minigui/build CC=arm-linux-gcc --host=arm-linux --build=i386-linux --with-osname=linux --with-targetname=fbcon --disable-pcxvfb --enable-videonuc970 --enable-videofbcon --enable-autoial --disable-vbfsupport --disable-screensaver && make && make install && cd .. && cd ..; \
    done;
    @for subdir in $(MINIGUI_RES_SUBDIRS) ; do \
        cd $(MINIGUI_RES_SUBDIRS) && ./configure --prefix=$(PWD)/minigui/build && make install && cd .. && cd ..; \
    done;
    @for subdir in $(MINIGUI_APP_SUBDIRS) ; do \
        cd $(MINIGUI_APP_SUBDIRS) && export PKG_CONFIG_PATH="$(PWD)/minigui/build/lib/pkgconfig" && ./configure --prefix=$(PWD)/minigui/build CC=arm-linux-gcc --host=arm-linux --build=i386-linux CFLAGS=-I$(PWD)/minigui/build/include && make && cd .. && cd ..; \
    done;
endef


all:
	$(call make_subdir , all)

gui:
	$(call make_minigui , all)

python:
	$(call make_python , all)
 
install :
	$(call make_subdir , install)
 
debug:
	$(call make_subdir , debug)
	
clean:
	$(call make_subdir , clean) 
